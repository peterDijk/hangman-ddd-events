version: '3.4'

services:
  projections.db:
    container_name: hangman-projections
    image: mysql
    command: --default-authentication-plugin=mysql_native_password
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: ${PROJECTIONS_CREDENTIALS_PASSWORD}
      MYSQL_DATABASE: ${PROJECTIONS_DATABASE}
    networks:
      - backend
    ports:
      - ${PROJECTIONS_PORT}:3306
    volumes:
      - type: volume
        source: projections-volume-data
        target: /var/lib/projections

  store-state.db:
    container_name: hangman-store-state
    image: mongo
    restart: always
    ports:
      - ${STORE_STATE_PORT}:27017
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${STORE_STATE_USERNAME}
      MONGO_INITDB_ROOT_PASSWORD: ${STORE_STATE_PASSWORD}
    networks:
      - backend

  mongo-express:
    image: mongo-express
    restart: always
    ports:
      - 8081:8081
    environment:
      ME_CONFIG_MONGODB_ADMINUSERNAME: ${STORE_STATE_USERNAME}
      ME_CONFIG_MONGODB_ADMINPASSWORD: ${STORE_STATE_PASSWORD}
      ME_CONFIG_MONGODB_URL: mongodb://${STORE_STATE_USERNAME}:${STORE_STATE_PASSWORD}@store-state.db:27017/
    networks:
      - backend

  eventstore.db:
    container_name: hangman-eventstore
    image: eventstore/eventstore:20.6.1-buster-slim
    env_file:
      - ./.env
    ports:
      - '1113:1113'
      - '2113:2113'
    volumes:
      - type: volume
        source: eventstore-volume-data
        target: /var/lib/eventstore
      - type: volume
        source: eventstore-volume-logs
        target: /var/log/eventstore
    networks:
      - backend

  hangman-ddd-events:
    container_name: hangman
    build:
      context: '.'
    env_file:
      - ./.env
    command: ${CONTAINER_COMMAND}
    restart: always
    deploy:
      mode: replicated
      replicas: ${CONTAINER_SCALE}
      # above is ignored by dc up and dc run (only when deploy to swarm with docker stack deploy)
    depends_on:
      - eventstore.db
      - projections.db
      # service wont be started before this service is running
    healthcheck:
      test: ['CMD', 'curl', '-f', 'http://localhost:7070']
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 20s
    ports:
      - '${APP_PORT}:${CONTAINER_PORT}'
    volumes:
      - './src:/app/src'
    links:
      - eventstore.db
      - projections.db
      # by default, any service can reach any other service at that serviceâ€™s name.
    networks:
      - backend

volumes:
  projections-volume-data:
  eventstore-volume-data:
  eventstore-volume-logs:

networks:
  backend:
    driver: bridge
